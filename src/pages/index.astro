---
import InputTask from '../components/InputTask.astro';
import ButtonPlusTask from '../components/ButtonPlusTask.astro';
import SectionTask from '../components/SectionTask.astro';
import Layout from '../layouts/Layout.astro';
---

<Layout>
	<SectionTask>
		<InputTask />
		<ButtonPlusTask />
	</SectionTask>
</Layout>

<script>
	const inputTask = document.querySelector('#task') as HTMLInputElement | null;
	const buttonPlus = document.querySelector('#button-plus') as HTMLElement | null;

	if (buttonPlus && inputTask) {
		buttonPlus.addEventListener('click', () => {
			if (inputTask.value === '') {
				alert('Por favor, a침ada una tarea');
				return;
			}

			const li = document.createElement('li');
			li.innerHTML = `
				<div class="flex items-center justify-between bg-gray-50 p-3 rounded">
					<div class="flex items-center">
						<input type="checkbox" class="task-checkbox peer h-4 w-4 shrink-0 rounded-sm border border-[#18181A] ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 mr-2" />
						<span class="task-text text-gray-700">${inputTask.value}</span>
					</div>
					<button class="button-delete-task inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3">
						Eliminar
					</button>
				</div>
			`;

			const ul = document.querySelector('ul');
			if (ul) {
				ul.appendChild(li);

				inputTask.value = '';

				const taskCheckbox = li.querySelector('.task-checkbox') as HTMLInputElement | null;
				const taskText = li.querySelector('.task-text') as HTMLElement | null;

				if (taskCheckbox && taskText) {
					taskCheckbox.addEventListener('change', () => {
						if (taskCheckbox.checked) {
							taskCheckbox.classList.add('bg-[#18181A]');
							taskText.classList.add('line-through', 'text-gray-400');
						} else {
							taskText.classList.remove('line-through', 'text-gray-400');
						}
					});
				}

				const buttonDeleteTask = li.querySelector('.button-delete-task') as HTMLElement | null;
				if (buttonDeleteTask) {
					buttonDeleteTask.addEventListener('click', () => {
						li.remove();
					});
				}
			} else {
				console.error('No se encontr칩 el elemento <ul>');
			}
		});
	} else {
		console.error('No se encontr칩 el bot칩n Plus o el campo InputTask');
	}
</script>
